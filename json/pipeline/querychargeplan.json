{
	"name": "querychargeplan",
	"properties": {
		"activities": [
			{
				"name": "If Battery already charging",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.batterychargingflag,1)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Get Charge Plan",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set status check-valid-chargeplan",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "SELECT [id]\r\n      ,[date]\r\n      ,[hour]\r\n      ,[est_consumption]\r\n      ,[est_production]\r\n      ,[surplus_production]\r\n      ,[charge_potential]\r\n      ,[charge_trigger]\r\n      ,[charging]\r\n      ,[accumulated_charge]\r\n      ,[elspotprice_dkk]\r\n      ,[surplus_sellable_production]\r\n      ,[sale_potential_dkk] \r\n      ,[elspotprice_eur]\r\n      ,[sale_potential_eur]          \r\n  FROM [dbo].[chargeplan] \r\n  WHERE[date] = '2022-06-06'\r\n  ORDER BY [hour] ASC\r\n  FOR JSON AUTO ;",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "JSON_F52E2B61-18A1-11d1-B105-00805F49916B",
												"type": "String"
											},
											"sink": {
												"path": "$['JSON_F52E2B61-18A1-11d1-B105-00805F49916B']"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "chargePlanTable",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "getChargePlan",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Set varChargePlanJson",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Charge Plan",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "varChargePlanJson",
								"value": {
									"value": "@string(activity('Get Charge Plan').output)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set status check-valid-chargeplan",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "varPipelineStatus",
								"value": "running: checking charge plan exists and valid"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set status batt-already-charging",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "varPipelineStatus",
								"value": "stopped: battery already charging"
							}
						}
					]
				}
			},
			{
				"name": "If ChargePlan not exists or not valid",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If Battery already charging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(contains(variables('varChargePlanJson'),'\"charge_trigger\": true'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set status check-should-charging-begin",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "varPipelineStatus",
								"value": "running: check should charging begin"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "gen chargeplan",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Set status generate-charge-plan",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://chargeplanning.azurewebsites.net/api/generatePlan",
								"method": "POST",
								"body": {
									"value": "@json(variables('varChargePlanJson'))",
									"type": "Expression"
								},
								"datasets": [
									{
										"referenceName": "getChargePlan",
										"type": "DatasetReference"
									}
								]
							}
						},
						{
							"name": "Set status generate-charge-plan",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "varPipelineStatus",
								"value": "running: generate charge plan"
							}
						}
					]
				}
			},
			{
				"name": "If Should Charging Begin",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": []
			},
			{
				"name": "Lookup should charging begin",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "chargePlanTable",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"batterychargingflag": {
				"type": "int",
				"defaultValue": 0
			}
		},
		"variables": {
			"varChargePlanJson": {
				"type": "String"
			},
			"varPipelineStatus": {
				"type": "String",
				"defaultValue": "running"
			}
		},
		"annotations": []
	}
}